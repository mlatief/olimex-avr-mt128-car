Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                              car1.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

road                0xf               car1.o
road_index          0x2               car1.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
LOAD car1.o
LOAD lcd.o
LOAD lcd2.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x428
 *(.vectors)
 .vectors       0x00000000       0x8c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x000000ca                __vector_22
                0x000000ca                __vector_28
                0x000000ca                __vector_1
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_6
                0x000000ca                __vector_31
                0x000000ca                __vector_3
                0x000000ca                __vector_23
                0x000000ca                __vector_30
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_7
                0x000000ca                __vector_27
                0x000000ca                __vector_5
                0x000000ca                __vector_33
                0x000000ca                __vector_4
                0x000000ca                __vector_9
                0x000000ca                __vector_2
                0x000000ca                __vector_21
                0x000000ca                __vector_15
                0x000000ca                __vector_29
                0x000000ca                __vector_8
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_10
                0x000000ca                __vector_16
                0x000000ca                __vector_18
                0x000000ca                __vector_20
 .text          0x000000ce      0x16a car1.o
                0x000000ce                __vector_12
                0x00000106                init
                0x00000230                main
 .text          0x00000238      0x162 lcd.o
                0x000002de                lcd_write
                0x000002c4                lcd_read
                0x00000314                lcd_init
 .text          0x0000039a       0x8a lcd2.o
                0x000003d8                lcd_create_glyph
                0x0000039a                lcd_print
 .text          0x00000424        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text          0x00000424        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x00000424                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000424        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x00000424        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x00000424                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000424        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x00000424                exit
                0x00000424                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000424        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x00000428                _etext = .

.data           0x00800100       0x36 load address 0x00000428
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 .data          0x00800100       0x35 car1.o
                0x00800102                NGLYPHS
                0x00800100                ROADLEN
                0x00800105                glyphs
                0x00800104                BLANK
 .data          0x00800135        0x0 lcd.o
 .data          0x00800135        0x0 lcd2.o
 .data          0x00800135        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .data          0x00800135        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800136                . = ALIGN (0x2)
 *fill*         0x00800135        0x1 00
                0x00800136                _edata = .
                0x00800136                PROVIDE (__data_end, .)

.bss            0x00800136       0x12
                0x00800136                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800136        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 .bss           0x00800136        0x1 car1.o
                0x00800136                car_pos
 .bss           0x00800137        0x0 lcd.o
 .bss           0x00800137        0x0 lcd2.o
 .bss           0x00800137        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .bss           0x00800137        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800137       0x11 car1.o
                0x00800137                road
                0x00800146                road_index
                0x00800148                PROVIDE (__bss_end, .)
                0x00000428                __data_load_start = LOADADDR (.data)
                0x0000045e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800148        0x0
                0x00800148                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800148                PROVIDE (__noinit_end, .)
                0x00800148                _end = .
                0x00800148                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 car1.o
 .debug_aranges
                0x00000020       0x20 lcd.o
 .debug_aranges
                0x00000040       0x20 lcd2.o

.debug_pubnames
                0x00000000       0xf4
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x85 car1.o
 .debug_pubnames
                0x00000085       0x3a lcd.o
 .debug_pubnames
                0x000000bf       0x35 lcd2.o

.debug_info     0x00000000      0x575
 *(.debug_info)
 .debug_info    0x00000000      0x172 car1.o
 .debug_info    0x00000172      0x312 lcd.o
 .debug_info    0x00000484       0xf1 lcd2.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x2ab
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xb8 car1.o
 .debug_abbrev  0x000000b8      0x148 lcd.o
 .debug_abbrev  0x00000200       0xab lcd2.o

.debug_line     0x00000000      0x49c
 *(.debug_line)
 .debug_line    0x00000000      0x17e car1.o
 .debug_line    0x0000017e      0x279 lcd.o
 .debug_line    0x000003f7       0xa5 lcd2.o

.debug_frame    0x00000000      0x100
 *(.debug_frame)
 .debug_frame   0x00000000       0x40 car1.o
 .debug_frame   0x00000040       0x90 lcd.o
 .debug_frame   0x000000d0       0x30 lcd2.o

.debug_str      0x00000000      0x18a
 *(.debug_str)
 .debug_str     0x00000000       0xbb car1.o
                                 0xf9 (size before relaxing)
 .debug_str     0x000000bb       0x96 lcd.o
                                0x135 (size before relaxing)
 .debug_str     0x00000151       0x39 lcd2.o
                                 0xdd (size before relaxing)

.debug_loc      0x00000000      0x260
 *(.debug_loc)
 .debug_loc     0x00000000       0x18 car1.o
 .debug_loc     0x00000018      0x180 lcd.o
 .debug_loc     0x00000198       0xc8 lcd2.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(car1.elf elf32-avr)
LOAD linker stubs
